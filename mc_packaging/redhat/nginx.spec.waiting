%setup
#sed -e 's|%%DEFAULTSTART%%|2 3 4 5|g' -e 's|%%DEFAULTSTOP%%|0 1 6|g' \
#    -e 's|%%PROVIDES%%|nginx|g' < %{SOURCE2} > nginx.init
#sed -e 's|%%DEFAULTSTART%%||g' -e 's|%%DEFAULTSTOP%%|0 1 2 3 4 5 6|g' \
#    -e 's|%%PROVIDES%%|nginx-debug|g' < %{SOURCE2} > nginx-debug.init

%install
#%{__rm} -rf $RPM_BUILD_ROOT
#%{__make} DESTDIR=$RPM_BUILD_ROOT INSTALLDIRS=vendor install
#
#%{__mkdir} -p $RPM_BUILD_ROOT%{_datadir}/nginx
#%{__mv} $RPM_BUILD_ROOT%{_sysconfdir}/nginx/html $RPM_BUILD_ROOT%{_datadir}/nginx/
#
#%{__rm} -f $RPM_BUILD_ROOT%{_sysconfdir}/nginx/*.default
#%{__rm} -f $RPM_BUILD_ROOT%{_sysconfdir}/nginx/fastcgi.conf
#
#%{__mkdir} -p $RPM_BUILD_ROOT%{_localstatedir}/log/nginx
#%{__mkdir} -p $RPM_BUILD_ROOT%{_localstatedir}/run/nginx
#%{__mkdir} -p $RPM_BUILD_ROOT%{_localstatedir}/cache/nginx
#
#%{__mkdir} -p $RPM_BUILD_ROOT%{_libdir}/nginx/modules
#cd $RPM_BUILD_ROOT%{_sysconfdir}/nginx && \
#    %{__ln_s} ../..%{_libdir}/nginx/modules modules && cd -
#
#%{__mkdir} -p $RPM_BUILD_ROOT%{_datadir}/doc/%{name}-%{main_version}
#%{__install} -m 644 -p %{SOURCE12} \
#    $RPM_BUILD_ROOT%{_datadir}/doc/%{name}-%{main_version}/
#
#%{__mkdir} -p $RPM_BUILD_ROOT%{_sysconfdir}/nginx/conf.d
#%{__rm} $RPM_BUILD_ROOT%{_sysconfdir}/nginx/nginx.conf
#%{__install} -m 644 -p %{SOURCE4} \
#    $RPM_BUILD_ROOT%{_sysconfdir}/nginx/nginx.conf
#%{__install} -m 644 -p %{SOURCE5} \
#    $RPM_BUILD_ROOT%{_sysconfdir}/nginx/conf.d/default.conf
#
#%{__mkdir} -p $RPM_BUILD_ROOT%{_sysconfdir}/sysconfig
#%{__install} -m 644 -p %{SOURCE3} \
#    $RPM_BUILD_ROOT%{_sysconfdir}/sysconfig/nginx
#%{__install} -m 644 -p %{SOURCE7} \
#    $RPM_BUILD_ROOT%{_sysconfdir}/sysconfig/nginx-debug
#
#%{__install} -p -D -m 0644 %{bdir}/objs/nginx.8 \
#    $RPM_BUILD_ROOT%{_mandir}/man8/nginx.8
#
#%if %{use_systemd}
## install systemd-specific files
#%{__mkdir} -p $RPM_BUILD_ROOT%{_unitdir}
#%{__install} -m644 %SOURCE8 \
#    $RPM_BUILD_ROOT%{_unitdir}/nginx.service
#%{__install} -m644 %SOURCE11 \
#    $RPM_BUILD_ROOT%{_unitdir}/nginx-debug.service
#%{__mkdir} -p $RPM_BUILD_ROOT%{_libexecdir}/initscripts/legacy-actions/nginx
#%{__install} -m755 %SOURCE9 \
#    $RPM_BUILD_ROOT%{_libexecdir}/initscripts/legacy-actions/nginx/upgrade
#%{__install} -m755 %SOURCE13 \
#    $RPM_BUILD_ROOT%{_libexecdir}/initscripts/legacy-actions/nginx/check-reload
#%else
## install SYSV init stuff
#%{__mkdir} -p $RPM_BUILD_ROOT%{_initrddir}
#%{__install} -m755 nginx.init $RPM_BUILD_ROOT%{_initrddir}/nginx
#%{__install} -m755 nginx-debug.init $RPM_BUILD_ROOT%{_initrddir}/nginx-debug
#%endif
#
## install log rotation stuff
#%{__mkdir} -p $RPM_BUILD_ROOT%{_sysconfdir}/logrotate.d
#%if 0%{?suse_version}
#%{__install} -m 644 -p %{SOURCE10} \
#    $RPM_BUILD_ROOT%{_sysconfdir}/logrotate.d/nginx
#%else
#%{__install} -m 644 -p %{SOURCE1} \
#    $RPM_BUILD_ROOT%{_sysconfdir}/logrotate.d/nginx
#%endif
#
#%{__install} -m755 %{bdir}/objs/nginx-debug \
#    $RPM_BUILD_ROOT%{_sbindir}/nginx-debug
#
##/var/lock
#/var/lib/nginx/body \
#/var/lib/nginx/fastcgi \
#/var/lib/nginx/proxy \
#/var/lib/nginx/scgi \
#/var/lib/nginx/uwsgi \
##/var/lib/nginx
##debian/conf/
##debian/conf/proxy_params
##debian/conf/scgi_params
##debian/conf/koi-win
##debian/conf/nginx.conf
##debian/conf/koi-utf
##debian/conf/win-utf
##debian/conf/fastcgi_params
##debian/conf/sites-available
##debian/conf/sites-available/default
##debian/conf/mime.types
##debian/conf/snippets
##debian/conf/snippets/fastcgi-php.conf
##debian/conf/snippets/snakeoil.conf
##debian/conf/fastcgi.conf
##debian/conf/uwsgi_param
###
##debian/libnginx-mod-http-auth-pam.nginx
##debian/libnginx-mod-http-cache-purge.nginx
##debian/libnginx-mod-http-dav-ext.nginx
##debian/libnginx-mod-http-echo.nginx
##debian/libnginx-mod-http-fancyindex.nginx
##debian/libnginx-mod-http-geoip.nginx
##debian/libnginx-mod-http-headers-more-filter.nginx
##debian/libnginx-mod-http-image-filter.nginx
##debian/libnginx-mod-http-lua.nginx
##debian/libnginx-mod-http-ndk.nginx
##debian/libnginx-mod-http-perl.install
##debian/libnginx-mod-http-perl.lintian-overrides
##debian/libnginx-mod-http-perl.nginx
##debian/libnginx-mod-http-subs-filter.nginx
##debian/libnginx-mod-http-uploadprogress.nginx
##debian/libnginx-mod-http-upstream-fair.nginx
##debian/libnginx-mod-http-xslt-filter.nginx
##debian/libnginx-mod-mail.nginx
##debian/libnginx-mod-nchan.nginx
##debian/libnginx-mod.nginx.skeleton
##debian/libnginx-mod-stream.nginx$
##
##projects/mc/nginxp/nginx/debian/libnginx-mod.conf:
##debian/libnginx-mod.conf/mod-http-auth-pam.conf
##debian/libnginx-mod.conf/mod-http-cache-purge.conf
##debian/libnginx-mod.conf/mod-http-dav-ext.conf
##debian/libnginx-mod.conf/mod-http-echo.conf
##debian/libnginx-mod.conf/mod-http-fancyindex.conf
##debian/libnginx-mod.conf/mod-http-geoip.conf
##debian/libnginx-mod.conf/mod-http-headers-more-filter.conf
##debian/libnginx-mod.conf/mod-http-image-filter.conf
##debian/libnginx-mod.conf/mod-http-lua.conf
##debian/libnginx-mod.conf/mod-http-ndk.conf
##debian/libnginx-mod.conf/mod-http-perl.conf
##debian/libnginx-mod.conf/mod-http-subs-filter.conf
##debian/libnginx-mod.conf/mod-http-uploadprogress.conf
##debian/libnginx-mod.conf/mod-http-upstream-fair.conf
##debian/libnginx-mod.conf/mod-http-xslt-filter.conf
##debian/libnginx-mod.conf/mod-mail.conf
##debian/libnginx-mod.conf/mod-nchan.conf
##debian/libnginx-mod.conf/mod-stream.conf
#



%clean
#%{__rm} -rf $RPM_BUILD_ROOT

%files
#%defattr(-,root,root)
#
#%{_sbindir}/nginx
#%{_sbindir}/nginx-debug
#
#%dir %{_sysconfdir}/nginx
#%dir %{_sysconfdir}/nginx/conf.d
#%{_sysconfdir}/nginx/modules
#
#%config(noreplace) %{_sysconfdir}/nginx/nginx.conf
#%config(noreplace) %{_sysconfdir}/nginx/conf.d/default.conf
#%config(noreplace) %{_sysconfdir}/nginx/mime.types
#%config(noreplace) %{_sysconfdir}/nginx/fastcgi_params
#%config(noreplace) %{_sysconfdir}/nginx/scgi_params
#%config(noreplace) %{_sysconfdir}/nginx/uwsgi_params
#%config(noreplace) %{_sysconfdir}/nginx/koi-utf
#%config(noreplace) %{_sysconfdir}/nginx/koi-win
#%config(noreplace) %{_sysconfdir}/nginx/win-utf
#
#%config(noreplace) %{_sysconfdir}/logrotate.d/nginx
#%config(noreplace) %{_sysconfdir}/sysconfig/nginx
#%config(noreplace) %{_sysconfdir}/sysconfig/nginx-debug
#%if %{use_systemd}
#%{_unitdir}/nginx.service
#%{_unitdir}/nginx-debug.service
#%dir %{_libexecdir}/initscripts/legacy-actions/nginx
#%{_libexecdir}/initscripts/legacy-actions/nginx/*
#%else
#%{_initrddir}/nginx
#%{_initrddir}/nginx-debug
#%endif
#
#%attr(0755,root,root) %dir %{_libdir}/nginx
#%attr(0755,root,root) %dir %{_libdir}/nginx/modules
#%dir %{_datadir}/nginx
#%dir %{_datadir}/nginx/html
#%{_datadir}/nginx/html/*
#
#%attr(0755,root,root) %dir %{_localstatedir}/cache/nginx
#%attr(0755,root,root) %dir %{_localstatedir}/log/nginx
#
#%dir %{_datadir}/doc/%{name}-%{main_version}
#%doc %{_datadir}/doc/%{name}-%{main_version}/COPYRIGHT
#%{_mandir}/man8/nginx.8*

%pre
## Add the "nginx" user
#getent group %{nginx_group} >/dev/null || groupadd -r %{nginx_group}
#getent passwd %{nginx_user} >/dev/null || \
#    useradd -r -g %{nginx_group} -s /sbin/nologin \
#    -d %{nginx_home} -c "nginx user"  %{nginx_user}
#exit 0

%post
## Register the nginx service
#if [ $1 -eq 1 ]; then
#%if %{use_systemd}
#    /usr/bin/systemctl preset nginx.service >/dev/null 2>&1 ||:
#    /usr/bin/systemctl preset nginx-debug.service >/dev/null 2>&1 ||:
#%else
#    /sbin/chkconfig --add nginx
#    /sbin/chkconfig --add nginx-debug
#%endif
#    # print site info
#    cat <<BANNER
#----------------------------------------------------------------------
#
#Thanks for using nginx!
#
#Please find the official documentation for nginx here:
#* http://nginx.org/en/docs/
#
#Commercial subscriptions for nginx are available on:
#* http://nginx.com/products/
#
#----------------------------------------------------------------------
#BANNER
#
#    # Touch and set permisions on default log files on installation
#
#    if [ -d %{_localstatedir}/log/nginx ]; then
#        if [ ! -e %{_localstatedir}/log/nginx/access.log ]; then
#            touch %{_localstatedir}/log/nginx/access.log
#            %{__chmod} 640 %{_localstatedir}/log/nginx/access.log
#            %{__chown} nginx:%{nginx_loggroup} %{_localstatedir}/log/nginx/access.log
#        fi
#
#        if [ ! -e %{_localstatedir}/log/nginx/error.log ]; then
#            touch %{_localstatedir}/log/nginx/error.log
#            %{__chmod} 640 %{_localstatedir}/log/nginx/error.log
#            %{__chown} nginx:%{nginx_loggroup} %{_localstatedir}/log/nginx/error.log
#        fi
#    fi
#fi

%preun
#if [ $1 -eq 0 ]; then
#%if %use_systemd
#    /usr/bin/systemctl --no-reload disable nginx.service >/dev/null 2>&1 ||:
#    /usr/bin/systemctl stop nginx.service >/dev/null 2>&1 ||:
#%else
#    /sbin/service nginx stop > /dev/null 2>&1
#    /sbin/chkconfig --del nginx
#    /sbin/chkconfig --del nginx-debug
#%endif
#fi

%postun
#%if %use_systemd
#/usr/bin/systemctl daemon-reload >/dev/null 2>&1 ||:
#%endif
#if [ $1 -ge 1 ]; then
#    /sbin/service nginx status  >/dev/null 2>&1 || exit 0
#    /sbin/service nginx upgrade >/dev/null 2>&1 || echo \
#        "Binary upgrade failed, please check nginx's error.log"
#fi
 
